# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

### NoDocs ###
GET     /                           controllers.HomeController.index()


###
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Message'
###
GET     /api/v1/messages            controllers.MessageController.getAll

###
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Message'
###
GET     /api/v1/messages/exclusive/:username            controllers.MessageController.getAllUnread(username)

###
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Message'
#     404:
#       description: Message with specified ID was not found
###
GET     /api/v1/messages/:id        controllers.MessageController.getById(id: Long)

###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/dtos.NewMessage"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Message'
#     401:
#       description: Authentication information is missing or invalid
#   security:
#     - basicAuth: []
###
POST    /api/v1/messages            controllers.MessageController.create


###
#   responses:
#     204:
#       description: Message with specified id has been deleted
#     401:
#       description: Authentication information is missing or invalid
#     404:
#       description: Message with specified ID was not found
#   security:
#     - basicAuth: []
###
DELETE  /api/v1/messages/:id        controllers.MessageController.delete(id: Long)

###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/models.Message"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Message'
#     401:
#       description: Authentication information is missing or invalid
#   security:
#     - basicAuth: []
###
PUT     /api/v1/messages/:id        controllers.MessageController.update(id: Long)

###
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Event'
###
GET     /api/v2/events            controllers.EventController.getAll

###
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Event'
#     404:
#       description: Event with specified ID was not found
###
GET     /api/v2/events/:id        controllers.EventController.getById(id: Long)

###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/dtos.NewEvent"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Event'
#     401:
#       description: Authentication information is missing or invalid
###
POST    /api/v2/events           controllers.EventController.create


###
#   responses:
#     204:
#       description: Event with specified id has been deleted
#     401:
#       description: Authentication information is missing or invalid
#     404:
#       description: Event with specified ID was not found
#   security:
#     - basicAuth: []
###
DELETE  /api/v2/events/:id        controllers.EventController.delete(id: Long)

###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/models.Event"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.Event'
#     401:
#       description: Authentication information is missing or invalid
#   security:
#     - basicAuth: []
###
PUT     /api/v2/events/:id        controllers.EventController.update(id: Long)

###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/dtos.NewLogin"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/dtos.NewLogin'
#     401:
#       description: Authentication information is missing or invalid
###
POST     /api/v1/login       controllers.AuthController.login()

###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/dtos.NewLogin"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.User'
#     401:
#       description: Authentication information is missing or invalid
###
POST    /api/v1/register           controllers.AuthController.register


###
#   requestBody:
#     content:
#       application/json:
#         schema:
#           type: object
#           $ref: "#/definitions/dtos.NewEventUser"
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.EventUser'
#     401:
#       description: Authentication information is missing or invalid
###
POST    /api/v2/event/user           controllers.EventUserController.create

###
#   responses:
#     200:
#       schema:
#         $ref: '#/definitions/models.EventUser'
###
GET     /api/v2/event/user            controllers.EventUserController.getAll


###
#   responses:
#     204:
#       description: Event with specified id has been deleted
#     404:
#       description: Event with specified ID was not found
#     500:
#       description: Internal server error
###
DELETE  /api/v3/ZIO/events/:id        controllers.EventController.deleteZIO(id: Long)


# Map static resources from the /public folder to the /assets URL path
### NoDocs ###
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
